{"version":3,"sources":["components/NewExpenses/ExpenseForm.js","components/NewExpenses/NewExpense.js","components/Expenses/ExpensesFilter/ExpensesFilter.js","components/Expenses/ExpendeDate/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem/ExpenseItem.js","components/Expenses/ExpensesList/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart/ExpensesChart.js","components/Expenses/Expenses/Expenses.js","components/Counter/Counter.js","App.js","index.js"],"names":["ExpenseForm","data","useState","enteredDate","setEnteredDate","enteredUserTitle","useRef","enteredUserAmount","onSubmit","event","preventDefault","expenseData","title","current","value","amount","date","Date","onSaveExpenseData","target","reset","className","id","type","ref","min","max","onChange","console","log","onClick","onCancel","NewExpense","isEditing","setIsEdting","enteredExpenseData","Math","random","toString","onAddExpense","ExpensesFilter","selectedYear","onChangeYearFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","setTitle","undefined","maximumFractionDigits","ExpensesList","items","length","map","expense","ChartBar","barFilledHeight","maxValue","round","style","height","label","Chart","dataPointsValue","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","Counter","count","setCount","prevCount","initialExpenses","App","setExpenses","prevExpense","ReactDOM","createRoot","document","getElementById","render"],"mappings":"8bAmFeA,EAhFK,SAACC,GAGnB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAmBC,mBACnBC,EAAoBD,mBA+B1B,OACE,uBAAME,SAnBc,SAACC,GACrBA,EAAMC,iBACN,IAGMC,EAAc,CAClBC,MAJmBP,EAAiBQ,QAAQC,MAK5CC,QAJoBR,EAAkBM,QAAQC,MAK9CE,KAAM,IAAIC,KAAKd,IAGjBF,EAAKiB,kBAAkBP,GAGvBF,EAAMU,OAAOC,QACbhB,EAAe,GAChB,EAGC,UACE,sBAAKiB,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBACEC,GAAG,QACHC,KAAK,OAGLC,IAAKnB,OAGT,sBAAKgB,UAAU,uBAAf,UACE,2CACA,uBACEC,GAAG,SACHC,KAAK,SAGLC,IAAKjB,OAGT,sBAAKc,UAAU,uBAAf,UACE,yCACA,uBACEE,KAAK,OACLT,MAAOX,EACPsB,IAAI,aACJC,IAAI,aACJC,SArDgB,SAAClB,GACzBL,EAAeK,EAAMU,OAAOL,OAC5Bc,QAAQC,IAAIpB,EAAMU,OAAOL,MAC1B,UAsDG,sBAAKO,UAAU,uBAAf,UACE,wBAAQE,KAAK,SAASO,QAAS7B,EAAK8B,SAApC,oBAGA,wBAAQR,KAAK,SAAb,8BAIP,EC3CcS,EAlCI,SAAC/B,GAClB,MAAiCC,oBAAS,GAA1C,mBAAO+B,EAAP,KAAkBC,EAAlB,KAkBA,OACE,sBAAKb,UAAU,cAAf,WACIY,GACA,wBAAQH,QAVc,WAC1BI,GAAY,EACb,EAQK,6BAEDD,GACC,cAAC,EAAD,CACEf,kBAvBuB,SAACiB,GAC9B,IAAMxB,EAAW,2BACZwB,GADY,IAEfb,GAAIc,KAAKC,OAAOC,aAElBrC,EAAKsC,aAAa5B,GAClBuB,GAAY,EACb,EAiBOH,SAXmB,WACzBG,GAAY,EACb,MAcF,ECZcM,G,YApBQ,SAACvC,GAKtB,OACE,qBAAKoB,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQP,MAAOb,EAAKwC,aAAcd,SARV,SAAClB,GAC7BR,EAAKyC,mBAAmBjC,EAAMU,OAAOL,MACtC,EAMK,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,yBAKT,GCNc6B,G,kBAdK,SAAC1C,GACnB,IAAM2C,EAAQ3C,EAAKe,KAAK6B,eAAe,QAAS,CAAED,MAAO,SACnDE,EAAM7C,EAAKe,KAAK6B,eAAe,QAAS,CAAEC,IAAK,YAC/CC,EAAO9C,EAAKe,KAAKgC,cAEvB,OACE,sBAAK3B,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCuB,IACtC,qBAAKvB,UAAU,oBAAf,SAAoCyB,IACpC,qBAAKzB,UAAU,qBAAf,SAAqC0B,MAG1C,GCPcE,G,MALF,SAAChD,GACZ,IAAMiD,EAAU,QAAUjD,EAAKoB,UAC/B,OAAO,qBAAKA,UAAW6B,EAAhB,SAA0BjD,EAAKkD,UACvC,GC4BcC,EA5BK,SAACnD,GAGnB,MAA0BC,mBAASD,EAAKW,OAAxC,mBAAOA,EAAP,KAAcyC,EAAd,KAMA,OACE,6BACE,eAAC,EAAD,CAAMhC,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaL,KAAMf,EAAKe,OACxB,sBAAKK,UAAU,4BAAf,UACE,6BAAKT,IACL,sBAAKS,UAAU,sBAAf,gBACM,IACHpB,EAAKc,OAAO8B,oBAAeS,EAAW,CACrCC,sBAAuB,OAG3B,wBAAQzB,QAhBI,WAClBuB,EAAS,UACV,EAcO,6BAKT,ECRcG,EAnBM,SAACvD,GACpB,OAA0B,IAAtBA,EAAKwD,MAAMC,OACN,oBAAIrC,UAAU,0BAAd,gCAIP,oBAAIA,UAAU,gBAAd,SACGpB,EAAKwD,MAAME,KAAI,SAACC,GAAD,OACd,cAAC,EAAD,CAEEhD,MAAOgD,EAAQhD,MACfG,OAAQ6C,EAAQ7C,OAChBC,KAAM4C,EAAQ5C,MAHT4C,EAAQtC,GAFD,KAUrB,E,OCCcuC,G,YAnBE,SAAC5D,GAChB,IAAI6D,EAAkB,KAKtB,OAHI7D,EAAK8D,SAAW,IAClBD,EAAkB1B,KAAK4B,MAAO/D,EAAKa,MAAQb,EAAK8D,SAAY,KAAO,KAGnE,sBAAK1C,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACV4C,MAAO,CAAEC,OAAQJ,OAGrB,qBAAKzC,UAAU,mBAAf,SAAmCpB,EAAKkE,UAG7C,GCCcC,EAjBD,SAACnE,GACb,IAAMoE,EAAkBpE,EAAKqE,WAAWX,KAAI,SAACY,GAAD,OAAeA,EAAUzD,KAAzB,IACtC0D,EAAepC,KAAKV,IAAL,MAAAU,KAAI,YAAQiC,IACjC,OACE,qBAAKhD,UAAU,QAAf,SACGpB,EAAKqE,WAAWX,KAAI,SAACY,GAAD,OACnB,cAAC,EAAD,CAEEzD,MAAOyD,EAAUzD,MACjBiD,SAAUS,EACVL,MAAOI,EAAUJ,OAHZI,EAAUJ,MAFE,KAU1B,ECQcM,EAxBO,SAACxE,GACrB,IAD8B,EACxByE,EAAkB,CACtB,CAAEP,MAAO,MAAOrD,MAAO,GACvB,CAAEqD,MAAO,MAAOrD,MAAO,GACvB,CAAEqD,MAAO,MAAOrD,MAAO,GACvB,CAAEqD,MAAO,MAAOrD,MAAO,GACvB,CAAEqD,MAAO,MAAOrD,MAAO,GACvB,CAAEqD,MAAO,MAAOrD,MAAO,GACvB,CAAEqD,MAAO,MAAOrD,MAAO,GACvB,CAAEqD,MAAO,MAAOrD,MAAO,GACvB,CAAEqD,MAAO,MAAOrD,MAAO,GACvB,CAAEqD,MAAO,MAAOrD,MAAO,GACvB,CAAEqD,MAAO,MAAOrD,MAAO,GACvB,CAAEqD,MAAO,MAAOrD,MAAO,IAbK,cAgBRb,EAAK0E,UAhBG,IAgB9B,2BAAqC,CAAC,IAA3Bf,EAA0B,QAEnCc,EADqBd,EAAQ5C,KAAK4D,YACJ9D,OAAS8C,EAAQ7C,MAChD,CAnB6B,+BAqB9B,OAAO,cAAC,EAAD,CAAOuD,WAAYI,GAC3B,ECOcG,EAzBE,SAAC5E,GAChB,MAAwCC,mBAAS,QAAjD,mBAAO4E,EAAP,KAAqBC,EAArB,KAMMC,EAAmB/E,EAAKwD,MAAMwB,QAAO,SAACrB,GAC1C,OAAOA,EAAQ5C,KAAKgC,cAAcV,aAAewC,CAClD,IAED,OACE,8BACE,eAAC,EAAD,CAAMzD,UAAU,WAAhB,UACE,cAAC,EAAD,CACEoB,aAAcqC,EACdpC,mBAdoB,SAACD,GAG3BsC,EAAgBtC,EACjB,IAYK,cAAC,EAAD,CAAekC,SAAUK,IACzB,cAAC,EAAD,CAAcvB,MAAOuB,QAI5B,E,MC5Bc,SAASE,IACtB,MAA0BhF,mBAAS,GAAnC,mBAAOiF,EAAP,KAAcC,EAAd,KAUA,OACE,sBAAK/D,UAAU,oBAAf,UACE,wBAAQS,QAVW,WACrBsD,GAAS,SAACC,GAAD,OAAeA,EAAY,CAA3B,GACV,EAQoChE,UAAU,iBAA3C,eAGA,6BAAK8D,IACL,wBAAQrD,QAVW,WACrBsD,GAAS,SAACC,GAAD,OAAeA,EAAY,CAA3B,GACV,EAQoChE,UAAU,iBAA3C,iBAKL,CCnBD,IAAMiE,EAAkB,CACtB,CACEhE,GAAI,KACJV,MAAO,YACPG,OAAQ,IACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,IAE1B,CACEK,GAAI,KACJV,MAAO,eACPG,OAAQ,KACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,IAE1B,CACEK,GAAI,KACJV,MAAO,oBACPG,OAAQ,IACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAsBbsE,EAlBH,WACV,MAAgCrF,mBAASoF,GAAzC,mBAAOX,EAAP,KAAiBa,EAAjB,KAOA,OACE,gCACE,oBAAInE,UAAU,QAAd,yBACA,cAAC,EAAD,CAAYkB,aARU,SAACqB,GACzB4B,GAAY,SAACC,GACX,MAAM,CAAE7B,GAAR,mBAAoB6B,GACrB,GACF,IAKG,cAAC,EAAD,CAAUhC,MAAOkB,IACjB,cAAC,EAAD,MAGL,ECrCYe,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,I","file":"static/js/main.b7750605.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (data) => {\r\n  //const [enteredTitle, setEnteredTitle] = useState(\"\"); //it will use a string since the value of event is always string\r\n  //const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const enteredUserTitle = useRef();\r\n  const enteredUserAmount = useRef();\r\n\r\n  // const titleChangeHandler = (event) => {\r\n  //   setEnteredTitle(event.target.value);\r\n  // };\r\n  // const amountChangeHandler = (event) => {\r\n  //   setEnteredAmount(event.target.value);\r\n  // };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredTitle = enteredUserTitle.current.value;\r\n    const enteredAmount = enteredUserAmount.current.value;\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    data.onSaveExpenseData(expenseData);\r\n    // enteredTitle.current.value = \"\";\r\n    // enteredAmount.current.value = \"\";\r\n    event.target.reset();\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            id=\"title\"\r\n            type=\"text\"\r\n            // value={enteredTitle}\r\n            // onChange={titleChangeHandler}\r\n            ref={enteredUserTitle}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            id=\"amount\"\r\n            type=\"number\"\r\n            // value={enteredAmount}\r\n            // onChange={amountChangeHandler}\r\n            ref={enteredUserAmount}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-30\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={data.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (data) => {\r\n  const [isEditing, setIsEdting] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random.toString(),\r\n    };\r\n    data.onAddExpense(expenseData);\r\n    setIsEdting(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEdting(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEdting(false);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (data) => {\r\n  const filterDropdownHandler = (event) => {\r\n    data.onChangeYearFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={data.selectedYear} onChange={filterDropdownHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (data) => {\r\n  const month = data.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = data.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = data.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\nconst Card = (data) => {\r\n  const classes = \"card \" + data.className;\r\n  return <div className={classes}>{data.children}</div>; //children, content is what is enclosed inside Card component.\r\n};\r\n\r\nexport default Card;\r\n\r\n//when you combine components, you are using composition\r\n","import React, { useState } from \"react\"; //hooks\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"../ExpendeDate/ExpenseDate\";\r\nimport Card from \"../../UI/Card\";\r\n\r\nconst ExpenseItem = (data) => {\r\n  //declared inside main function, not on nested\r\n  //returns array [currentValue, updatingFunction]\r\n  const [title, setTitle] = useState(data.title);\r\n\r\n  const clickButton = () => {\r\n    setTitle(\"Updated\"); //function from react\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={data.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{title}</h2>\r\n          <div className=\"expense-item__price\">\r\n            Php{\" \"}\r\n            {data.amount.toLocaleString(undefined, {\r\n              maximumFractionDigits: 2,\r\n            })}\r\n          </div>\r\n          <button onClick={clickButton}>Click me</button>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport \"./ExpensesList.css\";\r\nimport ExpenseItem from \"../ExpenseItem/ExpenseItem\";\r\n\r\nconst ExpensesList = (data) => {\r\n  if (data.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found No Expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {data.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (data) => {\r\n  let barFilledHeight = \"0%\";\r\n\r\n  if (data.maxValue > 0) {\r\n    barFilledHeight = Math.round((data.value / data.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFilledHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{data.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (data) => {\r\n  const dataPointsValue = data.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointsValue);\r\n  return (\r\n    <div className=\"chart\">\r\n      {data.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../../Chart/Chart\";\r\n\r\nconst ExpensesChart = (data) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of data.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\r\nimport ExpensesList from \"../ExpensesList/ExpensesList\";\r\nimport ExpensesChart from \"../ExpensesChart/ExpensesChart\";\r\nimport Card from \"../../UI/Card\";\r\n\r\nconst Expenses = (data) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2022\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    // console.log(\"expenses.js\");\r\n    // console.log(selectedYear);\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses = data.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selectedYear={filteredYear}\r\n          onChangeYearFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./Counter.css\";\r\nexport default function Counter() {\r\n  const [count, setCount] = useState(5);\r\n\r\n  const decrementCount = () => {\r\n    setCount((prevCount) => prevCount - 1);\r\n  };\r\n\r\n  const incrementCount = () => {\r\n    setCount((prevCount) => prevCount + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"counter-container\">\r\n      <button onClick={decrementCount} className=\"button-counter\">\r\n        -\r\n      </button>\r\n      <h1>{count}</h1>\r\n      <button onClick={incrementCount} className=\"button-counter\">\r\n        +\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport NewExpense from \"./components/NewExpenses/NewExpense\";\r\nimport Expenses from \"./components/Expenses/Expenses/Expenses\";\r\nimport Counter from \"./components/Counter/Counter\";\r\n\r\nconst initialExpenses = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Iphone 45\",\r\n    amount: 3000,\r\n    date: new Date(2022, 9, 2),\r\n  },\r\n  {\r\n    id: \"e2\",\r\n    title: \"Mac & Cheese\",\r\n    amount: 15000,\r\n    date: new Date(2022, 9, 2),\r\n  },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Trip to jerusalem\",\r\n    amount: 3000,\r\n    date: new Date(2022, 9, 2),\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  const [expenses, setExpenses] = useState(initialExpenses);\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((prevExpense) => {\r\n      return [expense, ...prevExpense];\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <h2 className=\"title\">Expense App</h2>\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <Expenses items={expenses} />\r\n      <Counter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}